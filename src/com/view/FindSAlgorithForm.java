/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.view;

import com.singleton.SingletonApp;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import com.model.EnjoySport;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Diend
 */
public class FindSAlgorithForm extends javax.swing.JFrame {

    private int flag;

    /**
     * Creates new form MainMenuForm
     */
    public FindSAlgorithForm() {
        initComponents();
        PanelInput.setVisible(false);
        labelResultQuestion.setVisible(false);
        labelResult.setVisible(false);
        HitungHypothesis.setVisible(false);
        SingletonApp.getInstance().getServiceEnjoySport().init();
        setListEnjoySport(SingletonApp.getInstance().getServiceEnjoySport().getAll());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TambahData = new javax.swing.JButton();
        UbahData = new javax.swing.JButton();
        HapusData = new javax.swing.JButton();
        PanelInput = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabelId = new javax.swing.JLabel();
        InputSky = new javax.swing.JTextField();
        InputId = new javax.swing.JTextField();
        InputAirTemp = new javax.swing.JTextField();
        SimpanData = new javax.swing.JButton();
        InputHumidity = new javax.swing.JTextField();
        InputWind = new javax.swing.JTextField();
        InputWater = new javax.swing.JTextField();
        InputForecast = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabelEnjoy = new javax.swing.JLabel();
        CheckEnjoySport = new javax.swing.JCheckBox();
        HitungHypothesis = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableEnjoySport = new javax.swing.JTable();
        CandElimData = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        labelResultQuestion = new javax.swing.JLabel();
        labelResult = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Algoritma Find S");

        TambahData.setText("Add");
        TambahData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TambahDataActionPerformed(evt);
            }
        });

        UbahData.setText("Edit");
        UbahData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UbahDataActionPerformed(evt);
            }
        });

        HapusData.setText("Delete");
        HapusData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HapusDataActionPerformed(evt);
            }
        });

        jLabel1.setText("Sky");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabelId.setText("ID");
        jLabelId.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SimpanData.setText("Simpan");
        SimpanData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SimpanDataActionPerformed(evt);
            }
        });

        jLabel5.setText("Air Temp");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel6.setText("Humidity");
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel7.setText("Wind");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel8.setText("Water");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel9.setText("Forecast");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabelEnjoy.setText("Enjoy Sport");
        jLabelEnjoy.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        CheckEnjoySport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckEnjoySportActionPerformed(evt);
            }
        });

        HitungHypothesis.setText("Hypothesis");
        HitungHypothesis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HitungHypothesisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelInputLayout = new javax.swing.GroupLayout(PanelInput);
        PanelInput.setLayout(PanelInputLayout);
        PanelInputLayout.setHorizontalGroup(
            PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelInputLayout.createSequentialGroup()
                .addComponent(SimpanData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(HitungHypothesis))
            .addGroup(PanelInputLayout.createSequentialGroup()
                .addGroup(PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabelId, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(InputId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(InputSky)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(InputAirTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(InputHumidity, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(InputWind, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(InputWater, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(InputForecast, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelEnjoy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelInputLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(CheckEnjoySport)
                        .addGap(21, 21, 21))))
        );
        PanelInputLayout.setVerticalGroup(
            PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelInputLayout.createSequentialGroup()
                .addGroup(PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelId)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabelEnjoy))
                .addGap(16, 16, 16)
                .addGroup(PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CheckEnjoySport)
                    .addGroup(PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(InputId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(InputSky, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(InputAirTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(InputHumidity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(InputWind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(InputWater, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(InputForecast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39)
                .addGroup(PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SimpanData)
                    .addComponent(HitungHypothesis))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setText("Data Training");

        TableEnjoySport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Sky", "Air Term", "Humidity", "Wind", "Water", "Forecast", "Enjoy Sport"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TableEnjoySport);

        CandElimData.setText("Candidate Elimination");
        CandElimData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CandElimDataActionPerformed(evt);
            }
        });

        labelResultQuestion.setText("Are you enjoy to sport ?");

        labelResult.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        labelResult.setText("Yes");
        labelResult.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(127, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(labelResultQuestion)
                        .addGap(123, 123, 123))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(labelResult)
                        .addGap(164, 164, 164))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelResultQuestion)
                .addGap(18, 18, 18)
                .addComponent(labelResult, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 813, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(TambahData)
                            .addGap(18, 18, 18)
                            .addComponent(UbahData)
                            .addGap(18, 18, 18)
                            .addComponent(HapusData)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CandElimData, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(PanelInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TambahData)
                    .addComponent(UbahData)
                    .addComponent(HapusData)
                    .addComponent(CandElimData))
                .addGap(18, 18, 18)
                .addComponent(PanelInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setListEnjoySport(ArrayList<EnjoySport> enjoySport) {
        DefaultTableModel model = (DefaultTableModel) TableEnjoySport.getModel();
        model.setRowCount(0);
        for (int i = 0; i < enjoySport.size(); i++) {
            Object[] data = {enjoySport.get(i).getId(), enjoySport.get(i).getSky(), enjoySport.get(i).getAirTemp(), enjoySport.get(i).getHumidity(),
                enjoySport.get(i).getWind(), enjoySport.get(i).getWater(), enjoySport.get(i).getForecast(), enjoySport.get(i).getEnjoy()
            };
            model.addRow(data);
        }
    }

    public void ResetInputField() {
        InputSky.setText("");
        InputId.setText("");
        InputAirTemp.setText("");
        InputHumidity.setText("");
        InputWind.setText("");
        InputWater.setText("");
        InputForecast.setText("");
        CheckEnjoySport.setSelected(false);
        labelResultQuestion.setVisible(false);
        labelResult.setVisible(false);
    }

    private void SimpanDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SimpanDataActionPerformed

        boolean result;
        InputId.setEnabled(true);

        if (InputSky.getText().equals("") || InputId.getText().equals("") || InputAirTemp.getText().equals("")) {
            JPanel panel = new JPanel();
            JOptionPane.showMessageDialog(panel, "Ada data yang belum diisi", "Simpan Gagal", JOptionPane.ERROR_MESSAGE);
        } else {
            Long id = Long.parseLong(InputId.getText());
            String sky = InputSky.getText();
            String airTemp = InputAirTemp.getText();
            String humidity = InputHumidity.getText();
            String wind = InputWind.getText();
            String water = InputWater.getText();
            String forecast = InputForecast.getText();
            Boolean enjoy = CheckEnjoySport.isSelected();

            EnjoySport enjoySport = new EnjoySport(id, sky, airTemp, humidity, wind, water, forecast, enjoy);
            if (flag == 1) {
                result = SingletonApp.getInstance().getServiceEnjoySport().add(enjoySport);
            } else {
                result = SingletonApp.getInstance().getServiceEnjoySport().update(enjoySport);
            }

            if (result) {
                JPanel panel = new JPanel();
                JOptionPane.showMessageDialog(panel, "Data berhasil disimpan", "Simpan Sukses", JOptionPane.INFORMATION_MESSAGE);
                PanelInput.setVisible(false);
            } else {
                if (flag == 1) {
                    JPanel panel = new JPanel();
                    JOptionPane.showMessageDialog(panel, "ID sudah ada atau Jurusan tidak eksis", "Tambah Gagal", JOptionPane.ERROR_MESSAGE);
                } else {
                    JPanel panel = new JPanel();
                    JOptionPane.showMessageDialog(panel, "ID tidak ditemukan", "Edit Gagal", JOptionPane.ERROR_MESSAGE);
                }
            }
            setListEnjoySport(SingletonApp.getInstance().getServiceEnjoySport().getAll());
        }
    }//GEN-LAST:event_SimpanDataActionPerformed


    private void TambahDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TambahDataActionPerformed
        ResetInputField();
        PanelInput.setVisible(true);
        InputId.setEnabled(true);
        flag = 1;
    }//GEN-LAST:event_TambahDataActionPerformed

    private void UbahDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UbahDataActionPerformed

        ResetInputField();
        InputId.setEnabled(false);
        SimpanData.setVisible(true);
        jLabelId.setVisible(true);
        InputId.setVisible(true);
        CheckEnjoySport.setVisible(true);
        jLabelEnjoy.setVisible(true);
        HitungHypothesis.setVisible(false);

//        int index = ListEnjoySport.getSelectedIndex();
        int index = TableEnjoySport.getSelectedRow();

        if (index == -1) {
            JPanel panel = new JPanel();
            JOptionPane.showMessageDialog(panel, "Tidak ada data yang dipilih", "Edit Gagal", JOptionPane.ERROR_MESSAGE);
        } else {
            PanelInput.setVisible(true);
            Long id = SingletonApp.getInstance().getServiceEnjoySport().getAll().get(index).getId();
            InputId.setText(SingletonApp.getInstance().getServiceEnjoySport().getById(id).getId().toString());
            InputSky.setText(SingletonApp.getInstance().getServiceEnjoySport().getById(id).getSky());
            InputAirTemp.setText(SingletonApp.getInstance().getServiceEnjoySport().getById(id).getAirTemp());
            InputHumidity.setText(SingletonApp.getInstance().getServiceEnjoySport().getById(id).getHumidity());
            InputWind.setText(SingletonApp.getInstance().getServiceEnjoySport().getById(id).getWind());
            InputWater.setText(SingletonApp.getInstance().getServiceEnjoySport().getById(id).getWater());
            InputForecast.setText(SingletonApp.getInstance().getServiceEnjoySport().getById(id).getForecast());
            CheckEnjoySport.setSelected(SingletonApp.getInstance().getServiceEnjoySport().getById(id).getEnjoy());
            flag = 0;
        }

    }//GEN-LAST:event_UbahDataActionPerformed

    private void HapusDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HapusDataActionPerformed

        int index = TableEnjoySport.getSelectedRow();

        PanelInput.setVisible(false);
        InputId.setEnabled(true);

        if (index == -1) {
            JPanel panel = new JPanel();
            JOptionPane.showMessageDialog(panel, "Tidak ada data yang dipilih", "Hapus Gagal", JOptionPane.ERROR_MESSAGE);
        } else {
            SingletonApp.getInstance().getServiceEnjoySport().delete(Integer.toUnsignedLong(index));
            JPanel panel = new JPanel();
            JOptionPane.showMessageDialog(panel, "Data berhasil dihapus", "Hapus Sukses", JOptionPane.INFORMATION_MESSAGE);
        }

        setListEnjoySport(SingletonApp.getInstance().getServiceEnjoySport().getAll());
    }//GEN-LAST:event_HapusDataActionPerformed

    private void CheckEnjoySportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckEnjoySportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CheckEnjoySportActionPerformed

    private void HitungHypothesisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HitungHypothesisActionPerformed
        // TODO add your handling code here:
        String sky = InputSky.getText();
        String airTemp = InputAirTemp.getText();
        String humidity = InputHumidity.getText();
        String wind = InputWind.getText();
        String water = InputWater.getText();
        String forecast = InputForecast.getText();
        Boolean enjoy = false;

        ArrayList<EnjoySport> enjoySport = SingletonApp.getInstance().getServiceEnjoySport().getAll();
        EnjoySport hipotesis = new EnjoySport(null, null, null, null, null, null, null, null);
        for (int i = 0; i < enjoySport.size(); i++) {
            if (enjoySport.get(i).getEnjoy()) {
                //cek data pertama
                if (hipotesis.getSky() == null) {
                    hipotesis.setSky(enjoySport.get(i).getSky());
                } else {
                    //cek jika ada hipotesa yang berbeda dengan data training
                    if (!hipotesis.getSky().equals(enjoySport.get(i).getSky())) {
                        hipotesis.setSky("?");
                    }
                }
                if (hipotesis.getAirTemp() == null) {
                    hipotesis.setAirTemp(enjoySport.get(i).getAirTemp());
                } else {
                    if (!hipotesis.getAirTemp().equals(enjoySport.get(i).getAirTemp())) {
                        hipotesis.setAirTemp("?");
                    }
                }
                if (hipotesis.getHumidity() == null) {
                    hipotesis.setHumidity(enjoySport.get(i).getHumidity());
                } else {
                    if (!hipotesis.getHumidity().equals(enjoySport.get(i).getHumidity())) {
                        hipotesis.setHumidity("?");
                    }
                }
                if (hipotesis.getWind() == null) {
                    hipotesis.setWind(enjoySport.get(i).getWind());
                } else {
                    if (!hipotesis.getWind().equals(enjoySport.get(i).getWind())) {
                        hipotesis.setWind("?");
                    }
                }
                if (hipotesis.getWater() == null) {
                    hipotesis.setWater(enjoySport.get(i).getWater());
                } else {
                    if (!hipotesis.getWater().equals(enjoySport.get(i).getWater())) {
                        hipotesis.setWater("?");
                    }
                }
                if (hipotesis.getForecast() == null) {
                    hipotesis.setForecast(enjoySport.get(i).getForecast());
                } else {
                    if (!hipotesis.getForecast().equals(enjoySport.get(i).getForecast())) {
                        hipotesis.setForecast("?");
                    }
                }
            }
        }
        int yes = 1;
        // cek data yang akan dites dengan hipotesa
        for (int i = 0; i < enjoySport.size(); i++) {
            if (!hipotesis.getSky().equals(sky) && !hipotesis.getSky().equals("?")) {
                yes++;
            }
            if (!hipotesis.getAirTemp().equals(airTemp) && !hipotesis.getAirTemp().equals("?")) {
                yes++;
            }
            if (!hipotesis.getHumidity().equals(humidity) && !hipotesis.getHumidity().equals("?")) {
                yes++;
            }
            if (!hipotesis.getWind().equals(wind) && !hipotesis.getWind().equals("?")) {
                yes++;
            }
            if (!hipotesis.getWater().equals(water) && !hipotesis.getWater().equals("?")) {
                yes++;
            }
            if (!hipotesis.getForecast().equals(forecast) && !hipotesis.getForecast().equals("?")) {
                yes++;
            }
        }
        
        if(yes==1){
            enjoy = true;
        } else {
            enjoy = false;
        }
        
        labelResultQuestion.setVisible(true);
        labelResult.setVisible(true);
        labelResult.setText(enjoy?"Yes":"No");
    }//GEN-LAST:event_HitungHypothesisActionPerformed

    private void CandElimDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CandElimDataActionPerformed
        // TODO add your handling code here:
        PanelInput.setVisible(true);
        SimpanData.setVisible(false);
        jLabelId.setVisible(false);
        InputId.setVisible(false);
        CheckEnjoySport.setVisible(false);
        jLabelEnjoy.setVisible(false);
        HitungHypothesis.setVisible(true);
        ResetInputField();
    }//GEN-LAST:event_CandElimDataActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FindSAlgorithForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FindSAlgorithForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FindSAlgorithForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FindSAlgorithForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FindSAlgorithForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CandElimData;
    private javax.swing.JCheckBox CheckEnjoySport;
    private javax.swing.JButton HapusData;
    private javax.swing.JButton HitungHypothesis;
    private javax.swing.JTextField InputAirTemp;
    private javax.swing.JTextField InputForecast;
    private javax.swing.JTextField InputHumidity;
    private javax.swing.JTextField InputId;
    private javax.swing.JTextField InputSky;
    private javax.swing.JTextField InputWater;
    private javax.swing.JTextField InputWind;
    private javax.swing.JPanel PanelInput;
    private javax.swing.JButton SimpanData;
    private javax.swing.JTable TableEnjoySport;
    private javax.swing.JButton TambahData;
    private javax.swing.JButton UbahData;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelEnjoy;
    private javax.swing.JLabel jLabelId;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelResult;
    private javax.swing.JLabel labelResultQuestion;
    // End of variables declaration//GEN-END:variables
}
