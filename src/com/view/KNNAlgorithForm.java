/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.view;

import com.singleton.SingletonApp;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import com.model.Hipertensi;
import com.model.Kegemukan;
import com.model.Umur;
import java.util.Collections;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Diend
 */
public class KNNAlgorithForm extends javax.swing.JFrame {

    private int flag;

    /**
     * Creates new form MainMenuForm
     */
    public KNNAlgorithForm() {
        initComponents();
        PanelInput.setVisible(false);
        labelResultQuestion.setVisible(false);
        labelResult.setVisible(false);
        Hitung.setVisible(false);
        infoHasilPerhitungan.setVisible(false);
        hasilPerhitungan.setVisible(false);
        SingletonApp.getInstance().getServiceKegemukan().init();
        SingletonApp.getInstance().getServiceUmur().init();

        SingletonApp.getInstance().getServiceHipertensi().add(new Hipertensi(new Long(1),
                SingletonApp.getInstance().getServiceUmur().getByName("muda"),
                SingletonApp.getInstance().getServiceKegemukan().getByName("gemuk"),
                false));
        SingletonApp.getInstance().getServiceHipertensi().add(new Hipertensi(new Long(2),
                SingletonApp.getInstance().getServiceUmur().getByName("muda"),
                SingletonApp.getInstance().getServiceKegemukan().getByName("sangat gemuk"),
                false));
        SingletonApp.getInstance().getServiceHipertensi().add(new Hipertensi(new Long(3),
                SingletonApp.getInstance().getServiceUmur().getByName("paruh baya"),
                SingletonApp.getInstance().getServiceKegemukan().getByName("gemuk"),
                false));
        SingletonApp.getInstance().getServiceHipertensi().add(new Hipertensi(new Long(4),
                SingletonApp.getInstance().getServiceUmur().getByName("paruh baya"),
                SingletonApp.getInstance().getServiceKegemukan().getByName("terlalu gemuk"),
                true));
        SingletonApp.getInstance().getServiceHipertensi().add(new Hipertensi(new Long(5),
                SingletonApp.getInstance().getServiceUmur().getByName("tua"),
                SingletonApp.getInstance().getServiceKegemukan().getByName("terlalu gemuk"),
                true));

        setListHipertensi(SingletonApp.getInstance().getServiceHipertensi().getAll());
        setListUmur(SingletonApp.getInstance().getServiceUmur().getAll());
        setListKegemukan(SingletonApp.getInstance().getServiceKegemukan().getAll());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        TambahData = new javax.swing.JButton();
        UbahData = new javax.swing.JButton();
        HapusData = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableHipertensi = new javax.swing.JTable();
        KnnAlgorithm = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableUmur = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableKegemukan = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        PanelInput = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabelId = new javax.swing.JLabel();
        InputUmur = new javax.swing.JTextField();
        InputId = new javax.swing.JTextField();
        InputKegemukan = new javax.swing.JTextField();
        SimpanData = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabelEnjoy = new javax.swing.JLabel();
        CheckHipertensi = new javax.swing.JCheckBox();
        Hitung = new javax.swing.JButton();
        nilaiK = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        infoHasilPerhitungan = new javax.swing.JLabel();
        hasilPerhitungan = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        labelResultQuestion = new javax.swing.JLabel();
        labelResult = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Algoritma Find S");
        setResizable(false);

        TambahData.setText("Add");
        TambahData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TambahDataActionPerformed(evt);
            }
        });

        UbahData.setText("Edit");
        UbahData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UbahDataActionPerformed(evt);
            }
        });

        HapusData.setText("Delete");
        HapusData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HapusDataActionPerformed(evt);
            }
        });

        jLabel4.setText("Data Training");

        TableHipertensi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Umur", "Kegemukan", "Hipertensi"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableHipertensi.setMinimumSize(new java.awt.Dimension(30, 0));
        jScrollPane2.setViewportView(TableHipertensi);
        if (TableHipertensi.getColumnModel().getColumnCount() > 0) {
            TableHipertensi.getColumnModel().getColumn(0).setResizable(false);
            TableHipertensi.getColumnModel().getColumn(2).setResizable(false);
            TableHipertensi.getColumnModel().getColumn(3).setResizable(false);
        }

        KnnAlgorithm.setText("K-NN Algorith");
        KnnAlgorithm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KnnAlgorithmActionPerformed(evt);
            }
        });

        TableUmur.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TableUmur);
        if (TableUmur.getColumnModel().getColumnCount() > 0) {
            TableUmur.getColumnModel().getColumn(0).setResizable(false);
            TableUmur.getColumnModel().getColumn(1).setResizable(false);
        }

        TableKegemukan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(TableKegemukan);
        if (TableKegemukan.getColumnModel().getColumnCount() > 0) {
            TableKegemukan.getColumnModel().getColumn(0).setResizable(false);
            TableKegemukan.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel2.setText("Table Umur");

        jLabel3.setText("Table Data Tingkat Kegemukan");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(52, 52, 52))
        );

        jLabel1.setText("Umur");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabelId.setText("ID");
        jLabelId.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SimpanData.setText("Simpan");
        SimpanData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SimpanDataActionPerformed(evt);
            }
        });

        jLabel5.setText("Kegemukan");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabelEnjoy.setText("Hipertensi");
        jLabelEnjoy.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        CheckHipertensi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckHipertensiActionPerformed(evt);
            }
        });

        Hitung.setText("Hitung");
        Hitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HitungActionPerformed(evt);
            }
        });

        nilaiK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nilaiKActionPerformed(evt);
            }
        });

        jLabel6.setText("Masukkan nilai K");

        javax.swing.GroupLayout PanelInputLayout = new javax.swing.GroupLayout(PanelInput);
        PanelInput.setLayout(PanelInputLayout);
        PanelInputLayout.setHorizontalGroup(
            PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelInputLayout.createSequentialGroup()
                .addComponent(SimpanData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Hitung, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(PanelInputLayout.createSequentialGroup()
                .addGroup(PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabelId, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(InputId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(InputUmur)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(InputKegemukan, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))
                .addGroup(PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelInputLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelEnjoy, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                        .addGap(198, 198, 198))
                    .addGroup(PanelInputLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(CheckHipertensi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nilaiK))
                .addGap(146, 146, 146))
        );
        PanelInputLayout.setVerticalGroup(
            PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelInputLayout.createSequentialGroup()
                .addGroup(PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelId)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(jLabelEnjoy)
                    .addComponent(jLabel6))
                .addGap(16, 16, 16)
                .addGroup(PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelInputLayout.createSequentialGroup()
                        .addGroup(PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CheckHipertensi)
                            .addGroup(PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(InputId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(InputUmur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(InputKegemukan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30)
                        .addGroup(PanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SimpanData)
                            .addComponent(Hitung)))
                    .addComponent(nilaiK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        infoHasilPerhitungan.setText("Berikut ini adalah hasil perhitungannya :");

        hasilPerhitungan.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Umur", "Kegemukan", "Hipertensi", "Distance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setResizable(false);
            jTable3.getColumnModel().getColumn(1).setResizable(false);
            jTable3.getColumnModel().getColumn(2).setResizable(false);
            jTable3.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(hasilPerhitungan, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(infoHasilPerhitungan)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(infoHasilPerhitungan)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hasilPerhitungan, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        labelResultQuestion.setText("Apakah data termasuk hipertensi ?");

        labelResult.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        labelResult.setText("Yes");
        labelResult.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(127, Short.MAX_VALUE)
                .addComponent(labelResult)
                .addGap(164, 164, 164))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(labelResultQuestion)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelResultQuestion)
                .addGap(18, 18, 18)
                .addComponent(labelResult, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(111, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(PanelInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TambahData)
                        .addGap(18, 18, 18)
                        .addComponent(UbahData)
                        .addGap(18, 18, 18)
                        .addComponent(HapusData)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(KnnAlgorithm, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UbahData)
                    .addComponent(HapusData)
                    .addComponent(KnnAlgorithm)
                    .addComponent(TambahData))
                .addGap(18, 18, 18)
                .addComponent(PanelInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setListHipertensi(ArrayList<Hipertensi> hipertensi) {
        DefaultTableModel model = (DefaultTableModel) TableHipertensi.getModel();
        model.setRowCount(0);
        for (int i = 0; i < hipertensi.size(); i++) {
            Object[] data = {hipertensi.get(i).getId(), hipertensi.get(i).getUmur().getNama(), hipertensi.get(i).getKegemukan().getNama(), hipertensi.get(i).getHipertensi()};
            model.addRow(data);
        }
    }

    public void setListUmur(ArrayList<Umur> umurs) {
        DefaultTableModel model = (DefaultTableModel) TableUmur.getModel();
        model.setRowCount(0);
        for (int i = 0; i < umurs.size(); i++) {
            Object[] data = {umurs.get(i).getId(), umurs.get(i).getNama()};
            model.addRow(data);
        }
    }

    public void setListKegemukan(ArrayList<Kegemukan> kegemukans) {
        DefaultTableModel model = (DefaultTableModel) TableKegemukan.getModel();
        model.setRowCount(0);
        for (int i = 0; i < kegemukans.size(); i++) {
            Object[] data = {kegemukans.get(i).getId(), kegemukans.get(i).getNama()};
            model.addRow(data);
        }
    }

    public void ResetInputField() {
        InputUmur.setText("");
        InputId.setText("");
        InputKegemukan.setText("");
        CheckHipertensi.setSelected(false);
        labelResultQuestion.setVisible(false);
        labelResult.setVisible(false);
        infoHasilPerhitungan.setVisible(false);
        hasilPerhitungan.setVisible(false);
    }


    private void TambahDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TambahDataActionPerformed
        ResetInputField();
        PanelInput.setVisible(true);
        InputId.setEnabled(true);
        flag = 1;
    }//GEN-LAST:event_TambahDataActionPerformed

    private void UbahDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UbahDataActionPerformed

        ResetInputField();
        InputId.setEnabled(false);
        SimpanData.setVisible(true);
        jLabelId.setVisible(true);
        InputId.setVisible(true);
        CheckHipertensi.setVisible(true);
        jLabelEnjoy.setVisible(true);
        Hitung.setVisible(false);

        int index = TableHipertensi.getSelectedRow();

        if (index == -1) {
            JPanel panel = new JPanel();
            JOptionPane.showMessageDialog(panel, "Tidak ada data yang dipilih", "Edit Gagal", JOptionPane.ERROR_MESSAGE);
        } else {
            PanelInput.setVisible(true);
            Long id = SingletonApp.getInstance().getServiceHipertensi().getAll().get(index).getId();
            InputId.setText(SingletonApp.getInstance().getServiceHipertensi().getById(id).getId().toString());
            InputUmur.setText(SingletonApp.getInstance().getServiceHipertensi().getById(id).getUmur().getNama());
            InputKegemukan.setText(SingletonApp.getInstance().getServiceHipertensi().getById(id).getKegemukan().getNama());
            CheckHipertensi.setSelected(SingletonApp.getInstance().getServiceHipertensi().getById(id).getHipertensi());
            flag = 0;
        }

    }//GEN-LAST:event_UbahDataActionPerformed

    private void HapusDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HapusDataActionPerformed

        int index = TableHipertensi.getSelectedRow();

        PanelInput.setVisible(false);
        InputId.setEnabled(true);

        if (index == -1) {
            JPanel panel = new JPanel();
            JOptionPane.showMessageDialog(panel, "Tidak ada data yang dipilih", "Hapus Gagal", JOptionPane.ERROR_MESSAGE);
        } else {
            SingletonApp.getInstance().getServiceHipertensi().delete(Integer.toUnsignedLong(index));
            JPanel panel = new JPanel();
            JOptionPane.showMessageDialog(panel, "Data berhasil dihapus", "Hapus Sukses", JOptionPane.INFORMATION_MESSAGE);
        }

        setListHipertensi(SingletonApp.getInstance().getServiceHipertensi().getAll());
    }//GEN-LAST:event_HapusDataActionPerformed

    private void KnnAlgorithmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KnnAlgorithmActionPerformed
        // TODO add your handling code here:
        PanelInput.setVisible(true);
        SimpanData.setVisible(false);
        jLabelId.setVisible(false);
        InputId.setVisible(false);
        CheckHipertensi.setVisible(false);
        jLabelEnjoy.setVisible(false);
        Hitung.setVisible(true);
        ResetInputField();
    }//GEN-LAST:event_KnnAlgorithmActionPerformed

    private void SimpanDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SimpanDataActionPerformed

        boolean result;
        InputId.setEnabled(true);

        if (InputUmur.getText().equals("") || InputId.getText().equals("") || InputKegemukan.getText().equals("")) {
            JPanel panel = new JPanel();
            JOptionPane.showMessageDialog(panel, "Ada data yang belum diisi", "Simpan Gagal", JOptionPane.ERROR_MESSAGE);
        } else {
            Long id = Long.parseLong(InputId.getText());
            Umur umur = SingletonApp.getInstance().getServiceUmur().getByName(InputUmur.getText());
            Kegemukan kegemukan = SingletonApp.getInstance().getServiceKegemukan().getByName(InputKegemukan.getText());
            Boolean checkHipertensi = CheckHipertensi.isSelected();

            Hipertensi hipertensi = new Hipertensi(id, umur, kegemukan, checkHipertensi);
            if (flag == 1) {
                result = SingletonApp.getInstance().getServiceHipertensi().add(hipertensi);
            } else {
                result = SingletonApp.getInstance().getServiceHipertensi().update(hipertensi);
            }

            if (result) {
                JPanel panel = new JPanel();
                JOptionPane.showMessageDialog(panel, "Data berhasil disimpan", "Simpan Sukses", JOptionPane.INFORMATION_MESSAGE);
                PanelInput.setVisible(false);
            } else {
                if (flag == 1) {
                    JPanel panel = new JPanel();
                    JOptionPane.showMessageDialog(panel, "ID sudah ada atau Jurusan tidak eksis", "Tambah Gagal", JOptionPane.ERROR_MESSAGE);
                } else {
                    JPanel panel = new JPanel();
                    JOptionPane.showMessageDialog(panel, "ID tidak ditemukan", "Edit Gagal", JOptionPane.ERROR_MESSAGE);
                }
            }
            setListHipertensi(SingletonApp.getInstance().getServiceHipertensi().getAll());
        }
    }//GEN-LAST:event_SimpanDataActionPerformed

    private void CheckHipertensiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckHipertensiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CheckHipertensiActionPerformed

    private void HitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HitungActionPerformed
        // TODO add your handling code here:
        int k = Integer.parseInt(nilaiK.getText());

        ArrayList<Hipertensi> hipertensis = SingletonApp.getInstance().getServiceHipertensi().getAll();

        Umur tesUmur = SingletonApp.getInstance().getServiceUmur().getByName(InputUmur.getText());
        Kegemukan tesKegemukan = SingletonApp.getInstance().getServiceKegemukan().getByName(InputKegemukan.getText());
        for (Hipertensi h : hipertensis) {
            Double bc = Math.pow(tesUmur.getId() - h.getUmur().getId(), 2) + Math.pow(tesKegemukan.getId() - h.getKegemukan().getId(), 2);
            Double distance = Math.sqrt(bc);
            h.setDistance(distance);
        }
        Collections.sort(hipertensis, Hipertensi.distanceComparator);
        int yes = 0;
        int no = 0;
        int i = 0;
        for (Hipertensi h : hipertensis) {
            if (i < k) {
                if (h.getHipertensi()) {
                    yes += 1;
                } else {
                    no += 1;
                }
            } else {
                break;
            }
            i += 1;
        }

        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
        model.setRowCount(0);
        for (Hipertensi h : hipertensis) {
            Object[] data = {h.getUmur().getNama(), h.getKegemukan().getNama(), h.getHipertensi(), h.getDistance()};
            model.addRow(data);
        }

        infoHasilPerhitungan.setVisible(true);
        hasilPerhitungan.setVisible(true);
        labelResultQuestion.setVisible(true);
        labelResult.setVisible(true);
        labelResult.setText(yes > no ? "Yes" : "No");
    }//GEN-LAST:event_HitungActionPerformed

    private void nilaiKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nilaiKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nilaiKActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KNNAlgorithForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KNNAlgorithForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KNNAlgorithForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KNNAlgorithForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KNNAlgorithForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CheckHipertensi;
    private javax.swing.JButton HapusData;
    private javax.swing.JButton Hitung;
    private javax.swing.JTextField InputId;
    private javax.swing.JTextField InputKegemukan;
    private javax.swing.JTextField InputUmur;
    private javax.swing.JButton KnnAlgorithm;
    private javax.swing.JPanel PanelInput;
    private javax.swing.JButton SimpanData;
    private javax.swing.JTable TableHipertensi;
    private javax.swing.JTable TableKegemukan;
    private javax.swing.JTable TableUmur;
    private javax.swing.JButton TambahData;
    private javax.swing.JButton UbahData;
    private javax.swing.JLabel hasilPerhitungan;
    private javax.swing.JLabel infoHasilPerhitungan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelEnjoy;
    private javax.swing.JLabel jLabelId;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JLabel labelResult;
    private javax.swing.JLabel labelResultQuestion;
    private javax.swing.JTextField nilaiK;
    // End of variables declaration//GEN-END:variables
}
